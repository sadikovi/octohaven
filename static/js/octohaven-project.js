// Generated by CoffeeScript 1.9.0
(function() {
  var data, deleteLink, nameeditor, nameelem, projectid;

  projectid = function() {
    var a, x, _i, _len;
    a = document.getElementsByTagName("meta");
    for (_i = 0, _len = a.length; _i < _len; _i++) {
      x = a[_i];
      if (x.name === "projectid") {
        return x.getAttribute("content");
      }
    }
  };

  nameelem = document.getElementById("octohaven-project-name");

  deleteLink = document.getElementById("octohaven-project-action-delete");

  if (!nameelem) {
    throw new Error("Project name element is undefined");
  }

  nameeditor = new this.FastEditor(nameelem, (function(_this) {
    return function(status, value) {
      var data;
      if (status && value && projectid) {
        data = {
          projectid: "" + (_this.util.quote(projectid())),
          projectname: "" + (_this.util.quote(value))
        };
        return _this.loader.sendrequest("post", "/api/project/update", {}, JSON.stringify(data));
      }
    };
  })(this));

  this.util.addEventListener(deleteLink, "click", (function(_this) {
    return function(e) {
      var data;
      e.preventDefault();
      data = {
        projectid: "" + (_this.util.quote(projectid()))
      };
      return _this.loader.sendrequest("post", "/api/project/delete", {}, JSON.stringify(data), function(s, r) {
        var isdeleted, redirect, response, _ref;
        if (s === 200) {
          response = JSON.parse(r);
          _ref = [response.data.redirect, response.data.isdeleted], redirect = _ref[0], isdeleted = _ref[1];
          return window.location.href = redirect ? redirect : "/";
        } else {
          return console.log("General error happened due to project deletion");
        }
      }, function(e, r) {
        return console.log("Error " + r);
      });
    };
  })(this));

  data = {
    projectid: projectid(),
    branchname: "test-branch0.7116906314622611"
  };

  this.loader.sendrequest("post", "/api/branch/select", {}, JSON.stringify(data), (function(_this) {
    return function(s, r) {
      return console.log(s, r, function(e, r) {
        return console.log(e, r);
      });
    };
  })(this));

}).call(this);
